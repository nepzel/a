import pandas as pd
import numpy as np
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
# Load the dataset
df =  pd.read_excel("sheet1.xlsx")
df.head()
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
#df.drop(['Column1', 'Column2', 'etc..'], axis=1, inplace=True)
a=df.drop(['PE'],axis=1).values
b=df['PE'].values
print(a)
print(b)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
from sklearn.model_selection import train_test_split
a_train,a_test,b_train,b_test=train_test_split(a,b,test_size=0.3,random_state=0)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
from sklearn.linear_model import LinearRegression
ml=LinearRegression()
ml.fit(a_train,b_train)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
b_pred=ml.predict(a_test)
print(b_pred)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
ml.predict([[14.96,41.76,1024.07,73.17]])
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
from sklearn.metrics import r2_score
r2_score(b_test,b_pred)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
import matplotlib.pyplot as plt
plt.figure(figsize=(15,10))
plt.scatter(b_test,b_pred)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Actual vs Predicted')
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
pred_b_df=pd.DataFrame({'Actual Value':b_test,'Predicted value':b_pred,'Difference':b_test-b_pred})
pred_b_df[0:20]
